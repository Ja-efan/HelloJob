# 블루-그린 배포를 위한 upstream 설정
upstream frontend {
    server frontend-blue:5173 weight=100;   # 블루 환경 (초기 활성)
    server frontend-green:5173 weight=0;    # 그린 환경 (초기 비활성)
}

upstream backend {
    server backend-blue:8080 weight=100;    # 블루 환경 (초기 활성)
    server backend-green:8080 weight=0;     # 그린 환경 (초기 비활성)
}

upstream ai {
    server ai-blue:8000 weight=100;         # 블루 환경 (초기 활성)
    server ai-green:8000 weight=0;          # 그린 환경 (초기 비활성)
}

# 헬스체크 엔드포인트
server {
    listen 80;
    server_name localhost;

    location /health {
        add_header Content-Type text/plain;
        return 200 "healthy\n";
    }
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTP → HTTPS 리디렉션
server {
    listen 80;
    server_name k12b105.p.ssafy.io;
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS 처리 서버
server {
    listen 443 ssl;
    server_name k12b105.p.ssafy.io;
    
    ssl_certificate /etc/letsencrypt/live/k12b105.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/k12b105.p.ssafy.io/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    # 타임아웃 설정
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 300s;
    
    # 헬스체크 엔드포인트 (HTTPS)
    location /health {
        add_header Content-Type text/plain;
        return 200 "healthy\n";
    }
    
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
      
    # AI 서비스 라우팅
    location /api/v1/ai {
        proxy_pass http://ai;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 600s;  # AI는 응답 대기시간 10분으로 설정
    }
    
    location /api {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    location /oauth2 {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    location /login/oauth2 {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    location /sse {  # SSE 엔드포인트 경로
        proxy_pass http://backend;  # SSE를 제공하는 서버로 연결
        
        # 버퍼링 비활성화
        proxy_buffering off;
        
        # 타임아웃 설정 (SSE 연결은 장시간 유지됨)
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        
        # 헤더 설정
        proxy_set_header Connection '';  # Connection: keep-alive 대신 빈 값 설정
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        
        # HTTP/1.1 사용
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
        
        # 캐싱 비활성화
        proxy_cache off;
    }
}